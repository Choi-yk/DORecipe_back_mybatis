plugins {
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id 'java'
	id 'war'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
   implementation 'org.springframework.boot:spring-boot-starter'
   implementation 'org.springframework.boot:spring-boot-starter-web'
   implementation 'org.springframework.boot:spring-boot-devtools'
   implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
//   implementation 'commons-io:commons-io:2.6'	//의존성 주입

   
   annotationProcessor 'org.projectlombok:lombok'   //컴파일 단계에서 어노테이션을 분석하고 처리하기 위해 사용
   compileOnly 'org.projectlombok:lombok'   //lombok 설정
   testImplementation 'org.springframework.boot:spring-boot-starter-test'   //서버 자동 재실행 설정
   
   implementation 'org.springframework.boot:spring-boot-starter-validation'   //validation 유효성검사
   implementation 'org.springframework.boot:spring-boot-starter-security'   //security 설정/

   	runtimeOnly 'mysql:mysql-connector-java'   //mysql 설정
   
   implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3' // mybatis
   implementation 'javax.servlet:jstl:1.2'
   
   implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
   
   testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.1.3'	//mybatis 작동 test
   
   implementation 'org.springframework:spring-jdbc:5.3.20'
   
}

def frontendDir = "$projectDir/src/main/front"

sourceSets {
	main {
		resources { srcDirs = ["$projectDir/src/main/resources"]
		}
	}
}

processResources { dependsOn "copyReactBuildFiles" }

task installReact(type: Exec) {
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "audit", "fix"
		commandLine 'npm.cmd', 'install' }
	else {
		commandLine "npm", "audit", "fix" commandLine 'npm', 'install'
	}
}

task buildReact(type: Exec) {
	dependsOn "installReact"
	workingDir "$frontendDir"
	inputs.dir "$frontendDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "run-script", "build"
	} else {
		commandLine "npm", "run-script", "build"
	}
}

task copyReactBuildFiles(type: Copy) {
	dependsOn "buildReact"
	from "$frontendDir/build"
	into "$projectDir/src/main/resources/static"
}

tasks.named('test') {
	useJUnitPlatform()
}